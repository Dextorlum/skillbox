Выход против возвращения против разрыва
Выход: это будет "exit" текущего контекста. Если вы вызовете эту команду из скрипта, он выйдет из скрипта. Если вы вызовете эту команду из shell, она выйдет из shell.
Если функция вызывает команду Exit, она выйдет из любого контекста, в котором она работает. Поэтому, если эта функция вызывается только из запущенного скрипта, она выйдет из этого скрипта. Однако если ваш скрипт просто объявляет функцию, чтобы ее можно было использовать из текущего shell, а вы запускаете эту функцию из shell, он выйдет из shell, потому что shell-это контекст, в котором выполняется функция, содержащая команду Exit .

Примечание: по умолчанию, если вы щелкните правой кнопкой мыши на скрипте, чтобы запустить его в PowerShell, как только скрипт будет запущен, PowerShell автоматически закроется. Это не имеет никакого отношения к команде Exit или к чему-либо еще в вашем сценарии. Это просто поведение по умолчанию PowerShell для сценариев, выполняемых с использованием этого конкретного метода запуска сценария. То же самое относится к пакетным файлам и окну командной строки.

Возврат: это приведет к возврату к предыдущей точке вызова. Если вы вызовете эту команду из скрипта (вне каких-либо функций), она вернется к shell. Если вы вызовете эту команду из shell, она вернется в shell (который является предыдущей точкой вызова для одной команды, запущенной из shell). Если вы вызовете эту команду из функции, она вернется туда, откуда когда-либо была вызвана функция.

Выполнение любых команд после точки вызова, в которую он возвращается, будет продолжаться с этой точки. Если скрипт вызывается из shell и содержит команду Return вне каких-либо функций, то когда он возвращается в shell, больше нет команд для выполнения, таким образом, Return используется таким же образом, как и Exit .

